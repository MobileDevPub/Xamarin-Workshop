// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using MyMovieCollection.Implementation.ViewModels;
using MyMovieCollection.Implementation.Utilities;
using System.ComponentModel;
using System.Linq.Expressions;
using System.Linq;

namespace MyMovieCollection
{
    public partial class SearchViewController : UIViewController
    {
        private IMyMoviesViewModel _viewModel;

        public SearchViewController(IntPtr handle) : base(handle)
        {
            _viewModel = ServiceContainer.Resolve<IMyMoviesViewModel>();
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            _viewModel.PropertyChanged += ViewModelUpdate;

            sbSearch.SearchButtonClicked += (object sender, EventArgs e) =>
            {
                ((UISearchBar)sender).ResignFirstResponder(); // Hide the keyboard
                Search();
            };
        }

        public override void ViewWillUnload()
        {
            base.ViewWillUnload();

            _viewModel.PropertyChanged -= ViewModelUpdate;
        }

        private void ViewModelUpdate(object sender, PropertyChangedEventArgs args)
        {
            InvokeOnMainThread(() =>
            {
                if (args.PropertyName == ExpressionsExtensions.AsString(() => _viewModel.SearchResults))
                {
                    var searchResultsTableSource = new SearchResultsTableSource(_viewModel.SearchResults);
                    tvSearchResults.Source = searchResultsTableSource;
                    tvSearchResults.ReloadData();

                    searchResultsTableSource.MovieResultSelected += delegate (object s, int e)
                    {
                        MovieResultSelected(e);
                    };
                }
            });
        }

        private async void Search()
        {
            await _viewModel.Search(sbSearch.Text);
        }

        private void MovieResultSelected(int selectedItem)
        {
            var selectedMovie = ((SearchResultsTableSource)tvSearchResults.Source).TableItems.ElementAt(selectedItem);
            var controller = (DetailViewController)Storyboard.InstantiateViewController("DetailViewController");
            controller.SelectedMovie = selectedMovie;
            NavigationController.PushViewController(controller, true);
        }
    }
}
